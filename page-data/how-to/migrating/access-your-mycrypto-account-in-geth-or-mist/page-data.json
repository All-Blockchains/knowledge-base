{"componentChunkName":"component---src-templates-page-tsx","path":"/how-to/migrating/access-your-mycrypto-account-in-geth-or-mist","result":{"data":{"page":{"title":"[MyCrypto ➡ Geth] Access Your MyCrypto Account in Geth","slug":"how-to/migrating/access-your-mycrypto-account-in-geth-or-mist","description":"Migrating to/from MyCrypto","dateModified":"2019-07-19","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[MyCrypto ➡ Geth] Access Your MyCrypto Account in Geth\",\n  \"description\": \"Migrating to/from MyCrypto\",\n  \"priority\": 50,\n  \"date_published\": \"2015-07-15\",\n  \"date_modified\": \"2019-07-19\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Geth files are typically found in the file locations below.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mac:\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/Library/Ethereum/keystore\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linux:\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.ethereum/keystore\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Windows:\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%APPDATA%/Ethereum/keystore\"))), mdx(\"p\", null, \"Optionally, you can specify the path through a command line option:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"--keystore\\n  Directory for the keystore (default = inside the datadir)\\n\")), mdx(\"p\", null, \"Simply copy your file to this folder in order to access it in Geth.\"), mdx(\"h2\", {\n    \"id\": \"presale\"\n  }, \"Presale\"), mdx(\"p\", null, \"This file is stored wherever you saved it. It was also emailed to you, so check your email inbox and any older email addresses you may have had.\"), mdx(\"p\", null, \"If you are unable to find the file, search for a file called \\\"\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ethereum_wallet_backup.json\"), \".\\\" This wallet file is encrypted with the password that you created when you made your presale purchase.\"), mdx(\"p\", null, \"Hopefully, you will find the file and can access it.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"parent":{"__typename":"Category","title":"Migrating","slug":"how-to/migrating"}}},"pageContext":{"slug":"how-to/migrating/access-your-mycrypto-account-in-geth-or-mist"}}}