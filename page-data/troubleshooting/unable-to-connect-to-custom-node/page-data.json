{"componentChunkName":"component---src-templates-page-tsx","path":"/troubleshooting/unable-to-connect-to-custom-node","result":{"data":{"page":{"title":"Unable to Connect to Custom Node","slug":"troubleshooting/unable-to-connect-to-custom-node","description":"Networks & Nodes","dateModified":"2020-02-18","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unable to Connect to Custom Node\",\n  \"description\": \"Networks & Nodes\",\n  \"priority\": 10,\n  \"date_published\": \"2017-10-08\",\n  \"date_modified\": \"2020-02-18\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For instructions on connecting to your own local Ethereum node with MyCrypto, please see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/developers/run-your-own-node-with-mycrypto\"\n  }), \"this\"), \" article.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Verify the URL you entered is correct.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Verify the port you entered is correct.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Verify that if you are connecting to an http:// node, you are running MyCrypto locally (NOT over https://).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Verify you are running with:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geth: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"geth --rpc --rpccorsdomain \\\"*\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parity: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parity --jsonrpc-cors \\\"*\\\"\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can also run both clients in light client mode, which only downloads the recent state of the blockchain and saves bandwidth:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geth: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"geth --rpc --rpccorsdomain \\\"*\\\" --syncmode \\\"light\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parity: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parity --jsonrpc-cors \\\"*\\\" --light\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Verify your node is actually up and running.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Try removing the node and adding it again.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Try changing the node in the MyCrypto interface to Etherscan or Infura, then change back.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Try using Google Chrome or a different browser.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Ensure that you do not have a firewall or something else that may be blocking the connection.\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"parent":{"__typename":"Category","title":"Troubleshooting Issues","slug":"troubleshooting"}}},"pageContext":{"slug":"troubleshooting/unable-to-connect-to-custom-node"}}}