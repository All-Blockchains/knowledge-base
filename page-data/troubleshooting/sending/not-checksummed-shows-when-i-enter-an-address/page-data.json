{"componentChunkName":"component---src-templates-page-tsx","path":"/troubleshooting/sending/not-checksummed-shows-when-i-enter-an-address","result":{"data":{"page":{"title":"Error: 'Not Checksummed' When Entering Address","slug":"troubleshooting/sending/not-checksummed-shows-when-i-enter-an-address","description":"Sending & Receiving","dateModified":"2019-04-01","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Error: 'Not Checksummed' When Entering Address\",\n  \"description\": \"Sending & Receiving\",\n  \"priority\": 80,\n  \"date_published\": \"2017-07-05\",\n  \"date_modified\": \"2019-04-01\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"what-is-a-checksummed-address\"\n  }, \"What is a checksummed address?\"), mdx(\"p\", null, \"A checksummed address is an address that contains uppercase letters, as specified in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eips.ethereum.org/EIPS/eip-55\",\n    \"target\": \"_blank\",\n    \"rel\": \"noopener noreferrer\"\n  }), \"EIP-55\"), \". Checksummed addresses are meant to help prevent users from sending transactions to the wrong address.\"), mdx(\"p\", null, \"There are two versions of Ethereum addresses: those that contain uppercase letters and those that don't:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0x4bbeeb066ed09b7aed07bf39eee0460dfa261520\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520\")), mdx(\"p\", null, \"Both addresses are exactly the same, except for the uppercase vs lowercase letters. Capitalization simply means the address has a checksum. Both will work exactly the same and have your funds.\"), mdx(\"p\", null, \"The one that is all lowercase is \\\"not checksummed,\\\" meaning that you could mistype a letter or number. If you mistype the address and send the transaction, your ETH will be gone forever.\"), mdx(\"p\", null, \"Alternatively, if you use the checksummed version of an address and mistype it, it will tell you that it's an invalid address when you go to submit the transaction.\"), mdx(\"p\", null, \"For this reason, we warn you when your address is not checksummed. You are still free to send funds to it, but you should double-check the address before doing so, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"especially\"), \" if you hand-typed it.\"), mdx(\"p\", null, \"If you are sending funds to one of your own wallets, you can save the checksummed address via the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mycrypto.com/account/\",\n    \"target\": \"_blank\",\n    \"rel\": \"noopener noreferrer\"\n  }), \"Send & Receive\"), \" page and copy the address displayed there.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"To help others implement best practices, make sure to contact your favorite Ethereum organizations about adopting this standard to help protect their users (YOU!).\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"parent":{"__typename":"Category","title":"Sending","slug":"troubleshooting/sending"}}},"pageContext":{"slug":"troubleshooting/sending/not-checksummed-shows-when-i-enter-an-address"}}}